# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net


# Build flow:
#   https GET https://gtfo.thunderstore.io/api/experimental/package/BepInEx/BepInExPack_GTFO/3.2.1/
#

name: .NET

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x

    # Get AutogenRundown mod version
    - name: Get version
      id: version
      run: echo "version=$(jq -r .version_number manifest.json)" >> "$GITHUB_OUTPUT"

    # Download all manifest dependencies from Thunderstore.
    - id: deps
      name: List mod dependencies
      run: jq .dependencies ${{ github.workspace }}/manifest.json > .deps.json
    - uses: actions/cache@v4
      id: thunderstore-cache
      name: Cache thunderstore dependencies
      with:
        path: deps/*.zip
        key: ${{ runner.os }}-thunderstore-${{ hashFiles('.deps.json') }}
    - uses: actions/github-script@v6
      name: Download thunderstore dependencies
      if: steps.thunderstore-cache.outputs.cache-hit != 'true'
      with:
        script: |
          const script = require("${{ github.workspace }}/.github/actions/thunderstore-download.js");
          script({ github, context, core, glob, io, exec, fetch, require });
    - name: Unzip thunderstore dependencies
      run: |
        echo ":: Extracting dependencies";
        for z in deps/*.zip; do
          echo "::group::  -> $z";
          unzip "$z" -d "${z%.zip}";
          echo "::endgroup::";
        done

    # Test thunderstore-toolkit
    - name: Test thunderstore-toolkit
      uses: brgmnn/thunderstore-toolkit@v0.4.0
      with:
        command: gen-manifest
        toml-path: ${{ github.workspace }}/thunderstore.toml

    # Build the mod.
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: |
        dotnet build --no-restore \
          --configuration Release \
          --property:Debug=false

    # Run the unit tests
    - name: Test
      if: false
      run: |
        dotnet test --no-build \
          --configuration Release \
          --property:Debug=false \
          --verbosity normal

    # Package the mod.
    - uses: actions/upload-artifact@v4
      with:
        name: AutogenRundown_${{ steps.version.outputs.version }}
        path: ${{ github.workspace }}/build/*


  # Generates a Zip file that can be installed manually without a mod manager
  manual_package:
    name: Package manual install
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Get AutogenRundown mod version
      - name: Get version
        id: version
        run: echo "version=$(jq -r .version_number manifest.json)" >> "$GITHUB_OUTPUT"

      # Download all manifest dependencies from Thunderstore.
      - id: deps
        name: List mod dependencies
        run: jq .dependencies ${{ github.workspace }}/manifest.json > .deps.json
      - uses: actions/cache@v4
        id: thunderstore-cache
        name: Cache thunderstore dependencies
        with:
          path: deps/*.zip
          key: ${{ runner.os }}-thunderstore-${{ hashFiles('.deps.json') }}
      - uses: actions/github-script@v6
        name: Download thunderstore dependencies
        if: steps.thunderstore-cache.outputs.cache-hit != 'true'
        with:
          script: |
            const script = require("${{ github.workspace }}/.github/actions/thunderstore-download.js");
            script({ github, context, core, glob, io, exec, fetch, require });
      - name: Unzip thunderstore dependencies
        run: |
          echo ":: Extracting dependencies";
          for z in deps/*.zip; do
            echo "::group::  -> $z";
            unzip "$z" -d "${z%.zip}";
            echo "::endgroup::";
          done

      # Download AutogenRundown build
      - uses: actions/download-artifact@v4
        with:
          name: AutogenRundown_${{ steps.version.outputs.version }}
          path: ${{ github.workspace }}/autogen

      - name: Build package
        run: |
          mkdir build

          # BepInEx
          mv deps/BepInEx-BepInExPack_GTFO/BepInExPack_GTFO build/AutogenRundown_GTFO
          mkdir -p build/AutogenRundown_GTFO/BepInEx/Assets/AssetBundles


          # ====== Dependency Mods ======
          # --- MTFO
          mv deps/dakkhuza-MTFO build/AutogenRundown_GTFO/BepInEx/plugins/

          # --- Extra Objective Setup and friends
          mv deps/Inas07-ExtraObjectiveSetup/plugins build/AutogenRundown_GTFO/BepInEx/plugins/Inas07-ExtraObjectiveSetup
          mv deps/Inas07-ExtraObjectiveSetup/* build/AutogenRundown_GTFO/BepInEx/plugins/Inas07-ExtraObjectiveSetup/

          mv deps/Inas07-EOSExt_Reactor/plugins build/AutogenRundown_GTFO/BepInEx/plugins/Inas07-EOSExt_Reactor
          mv deps/Inas07-EOSExt_Reactor/* build/AutogenRundown_GTFO/BepInEx/plugins/Inas07-EOSExt_Reactor/


          # --- LocalProgression
          mv deps/Inas07-LocalProgression/plugins build/AutogenRundown_GTFO/BepInEx/plugins/Inas07-LocalProgression
          mv deps/Inas07-LocalProgression/Assets/AssetBundles/* build/AutogenRundown_GTFO/BepInEx/Assets/AssetBundles/
          mv deps/Inas07-LocalProgression/* build/AutogenRundown_GTFO/BepInEx/plugins/Inas07-LocalProgression/

          # ====== Custom Geomorphs ======
          # --- Daks Geos
          mkdir build/AutogenRundown_GTFO/BepInEx/plugins/dakkhuza-DakGeos
          mv deps/dakkhuza-DakGeos/config/Assets/AssetBundles/* build/AutogenRundown_GTFO/BepInEx/Assets/AssetBundles/
          mv deps/dakkhuza-DakGeos/* build/AutogenRundown_GTFO/BepInEx/plugins/dakkhuza-DakGeos/

          # --- donan3967 geo pack 1
          mv deps/donan3967-donan3967_geo_pack_1/plugins build/AutogenRundown_GTFO/BepInEx/plugins/donan3967-donan3967_geo_pack_1
          mv deps/donan3967-donan3967_geo_pack_1/Assets/AssetBundles/* build/AutogenRundown_GTFO/BepInEx/Assets/AssetBundles/
          mv deps/donan3967-donan3967_geo_pack_1/* build/AutogenRundown_GTFO/BepInEx/plugins/donan3967-donan3967_geo_pack_1/

          # --- FlowGeos
          mv deps/Flowaria-FlowGeos/plugins build/AutogenRundown_GTFO/BepInEx/plugins/Flowaria-FlowGeos
          mv deps/Flowaria-FlowGeos/Assets/AssetBundles/* build/AutogenRundown_GTFO/BepInEx/Assets/AssetBundles/
          mv deps/Flowaria-FlowGeos/* build/AutogenRundown_GTFO/BepInEx/plugins/Flowaria-FlowGeos/

          # --- CheeseGeos
          mv deps/Red_Leicester_Cheese-CheeseGeos/plugins build/AutogenRundown_GTFO/BepInEx/plugins/Red_Leicester_Cheese-CheeseGeos
          mv deps/Red_Leicester_Cheese-CheeseGeos/Assets/AssetBundles/* build/AutogenRundown_GTFO/BepInEx/Assets/AssetBundles/
          mv deps/Red_Leicester_Cheese-CheeseGeos/* build/AutogenRundown_GTFO/BepInEx/plugins/Red_Leicester_Cheese-CheeseGeos/


          # Custom config
          cp manual-install/BepInEx.cfg build/AutogenRundown_GTFO/BepInEx/config/

          # AutogenRundown
          mv autogen build/AutogenRundown_GTFO/BepInEx/plugins/the_tavern-AutogenRundown

          # Manual install docs
          cp docs/MANUAL_INSTALL_README.txt build/README.txt

      # Package the manual install mod
      - uses: actions/upload-artifact@v4
        with:
          name: AutogenRundown_manual_install_${{ steps.version.outputs.version }}
          path: ${{ github.workspace }}/build/*
