name: Attach Assets

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: false
        default: ''

jobs:
  attach-assets:
    name: Attach assets to release
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v4
      - name: Determine version
        id: get-version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "No version specified, using latest draft"
            echo "release=$(gh release list | head -n 1 | awk '{print $1}')" >> "$GITHUB_OUTPUT"
          else
            echo "release=${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Get build run
        id: get-build
        run: |
          echo "build_id=$(gh run list -w .NET --limit 1 --status completed --branch main --json databaseId -q '.[].databaseId')" >> "$GITHUB_OUTPUT"

      - name: Download artifacts
        run: |
          artifacts=$(gh api /repos/brgmnn/autogen-rundown/actions/runs/${{ steps.get-build.outputs.build_id }}/artifacts | jq -c '.artifacts[]')

          # Create temporary directory for handling artifacts
          mkdir -p ${{ github.workspace }}/_artifacts && cd ${{ github.workspace }}/_artifacts

          for artifact in $artifacts; do
            name="$(echo $artifact | jq -r '.name').zip"
            url=$(echo $artifact | jq -r '.archive_download_url')

            gh api $url > $name

            echo "Downloading $name -> $url"
          done

      - name: Debug
        if: always()
        run: |
          echo "${{ steps.get-version.outputs.release }}"
          echo "${{ steps.get-build.outputs.build_id }}"
          ls -ls
